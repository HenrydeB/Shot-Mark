{"version":3,"sources":["components/Product.js","Redux/constants/productConstants.js","Screens/HomeScreen.js","Redux/actions/productActions.js","Redux/constants/cartConstants.js","Redux/actions/cartActions.js","Screens/ProductScreen.js","components/CartItem.js","Screens/CartScreen.js","components/navbar.js","components/backdrop.js","components/sidedrawer.js","App.js","reportWebVitals.js","Redux/reducers/cartReducers.js","Redux/store.js","Redux/reducers/productReducers.js","index.js"],"names":["Product","imageUrl","name","price","description","productId","className","src","alt","substring","to","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","useSelector","state","products","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addToCart","id","qty","getState","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","ProductScreen","match","history","useState","setQty","productDetails","getProductDetails","params","value","onChange","e","target","Array","keys","x","onClick","push","CartItem","item","qtyChangeHandler","removeHandler","CartScreen","removeFromCart","length","reduce","Number","toFixed","Navbar","click","Backdrop","show","SideDrawer","sideDrawerClass","join","App","sideToggle","setSideToggle","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CART_INITIAL_STATE","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e7558bb.chunk.js","sourcesContent":["import './Product.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Product = ({imageUrl, name, price, description, productId}) => {\r\n    return (\r\n        <div className=\"product\">\r\n          <img\r\n           src={imageUrl}\r\n           alt={name}/>\r\n\r\n          <div className=\"product__info\">\r\n            <p className=\"info__name\">{name}</p>\r\n\r\n            <p className= \"info__description\">\r\n                {description.substring(0, 100)}...\r\n            </p>\r\n\r\n            <p className='info__price'>${price}</p>\r\n\r\n            <Link to={`/product/${productId}`} className=\"info__button\">View</Link>\r\n          </div>  \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import './HomeScreen.css'\r\nimport { useEffect } from 'react'; \r\nimport  { useDispatch, useSelector } from 'react-redux';\r\n\r\n// Components\r\n\r\nimport Product from '../components/Product';\r\n\r\n//Actions\r\n\r\nimport { getProducts as listProducts } from '../Redux/actions/productActions';\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const getProducts = useSelector((state) => state.getProducts);\r\n    const { products, loading, error } = getProducts;\r\n\r\n    useEffect(() => {\r\n        dispatch (listProducts());\r\n    }, [dispatch]);\r\n    \r\n    return ( \r\n        <div className=\"homescreen\">\r\n            <h2 className=\"homescreen__title\">Latest Products</h2>\r\n            <div className=\"homescreen__products\">\r\n                {loading ? (\r\n                    <h2>Loading...</h2> \r\n                    ) : error ? (\r\n                    <h2>{error}</h2> \r\n                     ): \r\n                    products.map((product =>  (\r\n                    <Product \r\n                        key= {product._id}\r\n                        productId = {product._id}\r\n                        name= {product.name}\r\n                        price= {product.price}\r\n                        description= {product.description}\r\n                        imageUrl= {product.imageUrl}\r\n                    />\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch ({\r\n            type: actionTypes.GET_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n             ? error.response.data.message \r\n             : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({type: actionTypes.GET_PRODUCT_DETAILS_REQUEST});\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    }\r\n    catch (error) {\r\n        dispatch ({\r\n            type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n             ? error.response.data.message \r\n             : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n    dispatch ({\r\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\r\n    })\r\n};","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART= \"REMOVE_FROM_CART\";\r\nexport const CART_RESET= \"CART_RESET\";\r\n\r\n","//this is where we do the http request to the server\r\n\r\nimport * as actionTypes from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch ({\r\n        type: actionTypes.ADD_TO_CART,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            imageUrl: data.imageUrl,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch ({\r\n        type: actionTypes.REMOVE_FROM_CART,\r\n        payload: id,\r\n    });\r\n\r\n    localStorage.setItem('cart', JSON.stringify(getState().cart.cartItems));\r\n};","import './ProductScreen.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n//Actions\r\nimport { getProductDetails } from '../Redux/actions/productActions';\r\nimport { addToCart } from '../Redux/actions/cartActions';\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n\r\n    const [qty, setQty] = useState(1);\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.getProductDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    useEffect (() => {\r\n        if(product && match.params.id !== product._id) {\r\n            dispatch(getProductDetails(match.params.id));\r\n        }\r\n    }, [dispatch, match, product]);\r\n\r\n    const addToCartHandler = () => {\r\n        dispatch(addToCart(product._id, qty));\r\n        history.push(`/cart`);\r\n    }\r\n\r\n    return (\r\n         <div className = 'productscreen'>\r\n                {loading ? (\r\n                    <h2>Loading...</h2> \r\n                    )  : error ? (\r\n                    <h2>{error}</h2>\r\n                    ) : (\r\n                    <>\r\n                    <div className=\"productscreen__left\">\r\n                        <div className=\"left__image\">\r\n                            <img \r\n                            src= {product.imageUrl}\r\n                            alt= {product.name} />\r\n                        </div>\r\n\r\n                        <div className=\"left__info\">\r\n                            <p className=\"left__name\">{product.name}</p>\r\n                            <p>Price: ${product.price}</p>\r\n                            <p>Description: {product.description}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"productscreen__right\">\r\n                        <div className=\"right__info\">\r\n                            <p>\r\n                                Price: <span>${product.price}</span>\r\n                            </p>\r\n                            <p>\r\n                                Status: <span>{product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}</span>\r\n                            </p>\r\n                            <p>\r\n                                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                    {[...Array(product.countInStock).keys()].map((x) => (\r\n                                        <option key={x+1} value={x+1}>{x+1}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </p>\r\n                            <p>\r\n                                <button type=\"button\" onClick={addToCartHandler}>Add To Cart</button>\r\n                            </p>\r\n                        </div>\r\n                </div>\r\n                    </>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n    \r\n\r\nexport default ProductScreen;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({item, qtyChangeHandler, removeHandler }) => {\r\n    return (\r\n    <div className=\"cartitem\">\r\n        <div className=\"cartitem__image\">\r\n            <img \r\n            src= {item.imageUrl}\r\n            alt= {item.name}\r\n            />\r\n        </div> \r\n        <Link to= {`/product/${item.product}`} className=\"cartitem__name\">\r\n            <p>{item.name}</p>\r\n        </Link>\r\n        \r\n        <p className=\"cartitem__price\">${item.price}</p>\r\n\r\n        <select className=\"cartitem__select\" value = {item.qty} onChange={(e) =>\r\n         qtyChangeHandler(item.product, e.target.value)}>\r\n            {[...Array(item.countInStock).keys()].map((x) => (\r\n                <option key={x+1} value={x+1}>{x+1}</option>\r\n            ))}\r\n        </select>\r\n\r\n        <button className=\"cartitem__deleteBtn\" \r\n        onClick={() => removeHandler (item.product)}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default CartItem;\r\n","import './CartScreen.css'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//components\r\nimport CartItem from '../components/CartItem.js';\r\n\r\n//Actions\r\nimport {addToCart, removeFromCart} from '../Redux/actions/cartActions';\r\n\r\nconst CartScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const qtyChangeHandler = (id, qty) => {\r\n        dispatch(addToCart(id, qty));\r\n    };\r\n\r\n    const removeHandler= (id) => {\r\n        dispatch(removeFromCart(id));\r\n    };\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n    };\r\n\r\n    const getCartSubTotal = () => {\r\n        return cartItems.reduce((price, item) => (item.price * item.qty) + price, 0);\r\n    }\r\n\r\n\r\n    return <div className= 'cartscreen'>\r\n    <div className=\"cartscreen__left\">\r\n    <h2>Shopping Cart</h2>\r\n        {cartItems.length === 0 ? (\r\n            <div>\r\n                Your Cart is Empty <Link to = \"/\">Go Back</Link>\r\n            </div>\r\n        ) : cartItems.map((item) => (\r\n            <CartItem \r\n            key = {item.product}\r\n            item={item} \r\n            qtyChangeHandler={qtyChangeHandler}\r\n            removeHandler={removeHandler}\r\n            />\r\n        ))}\r\n    \r\n    </div>\r\n    <div className=\"cartscreen__right\">\r\n        <div className=\"cartscreen__info\">\r\n        <p>Subtotal ({getCartCount()}) items </p>\r\n        <p>${getCartSubTotal().toFixed(2)}</p>\r\n        </div>\r\n        <div>\r\n            <button>Proceed to Checkout</button>\r\n        </div>\r\n    </div>\r\n\r\n    </div>;\r\n};\r\n\r\nexport default CartScreen;\r\n","import './navbar.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Navbar = ({click}) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const {cartItems} = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce ((qty, item) => qty + Number(item.qty), 0);\r\n    }; \r\n\r\n    return (\r\n        <nav className = \"navbar\">\r\n        <div className=\"navbar__logo\">\r\n             <h2>SnapMark</h2>\r\n        </div>\r\n\r\n        <ul className=\"navbar__links\">\r\n            <li>\r\n                <Link to='/cart' className=\"cart__link\">\r\n                    <i className= \"fas fa-shopping-cart\"></i>\r\n                    <span>\r\n                    Cart\r\n                    <span className=\"cartlogo__badge\">{getCartCount()}</span>\r\n                    </span> \r\n                </Link>\r\n            </li>\r\n            <li>\r\n                <Link to='/'>\r\n                    Shop\r\n                </Link>\r\n            </li>\r\n        </ul>\r\n\r\n            <div className = \"hamburger__menu\" onClick={click}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import './backdrop.css'\r\n\r\nconst Backdrop = ({show, click}) => {\r\n    return show && <div className= \"Backdrop\" onClick={click}> </div>\r\n}\r\nexport default Backdrop;\r\n","import './sidedrawer.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst SideDrawer = ({ show, click }) => {\r\n    const sideDrawerClass = [\"sidedrawer\"];\r\n\r\n    const cart = useSelector((state) => {\r\n        return state.cart;\r\n    });\r\n    const {cartItems} = cart;\r\n\r\n    const getCartCount = () => {\r\n        return cartItems.reduce ((qty, item) => qty + Number(item.qty), 0);\r\n    }; \r\n\r\n    if(show) {\r\n            sideDrawerClass.push(\"show\");\r\n    }\r\n\r\n\r\n    return  (\r\n        <div className={sideDrawerClass.join(\" \")}>\r\n            <ul className=\"sidedrawer__links\" onClick={click}> \r\n                <li>\r\n                    <Link to =\"/cart\">\r\n                        <i className=\"fas fa-shopping-cart\"></i>\r\n                    <span>\r\n                        Cart {\" \"} \r\n                        <span className=\"sidedrawer__cartbadge\">{getCartCount()}</span>\r\n                    </span>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to =\"/\">Shop</Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SideDrawer\r\n","import './App.css';\nimport {useState} from 'react';\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\n// Screens\nimport HomeScreen from './Screens/HomeScreen';\nimport ProductScreen from './Screens/ProductScreen';\nimport CartScreen from './Screens/CartScreen';\n\n// Components\nimport Navbar from './components/navbar';\nimport Backdrop from './components/backdrop';\nimport SideDrawer from './components/sidedrawer';\n\nfunction App() {\n\n  const [sideToggle, setSideToggle] = useState(false);\n\n  return (\n    <Router>\n      <Navbar click={() => setSideToggle(true)}/>\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)}/>\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} /> \n      <main className=\"app\">\n        <Switch>\n          <Route exact path=\"/\" component={HomeScreen} />\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\n          <Route exact path=\"/cart\" component={CartScreen}/>\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../constants/cartConstants';\r\n\r\nconst CART_INITIAL_STATE = {\r\n    cartItems: [],\r\n};\r\n\r\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_TO_CART:\r\n        const item = action.payload;\r\n\r\n        const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n        if(existItem) {\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.map((x) => \r\n                x.product === existItem.product ? item : x\r\n                ),\r\n            };\r\n         } else {\r\n             return {\r\n                 ...state,\r\n                 cartItems: [...state.cartItems, item],\r\n             };\r\n         }\r\n         case actionTypes.REMOVE_FROM_CART:\r\n             return {\r\n                 ...state,\r\n                 cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n             };\r\n        default: \r\n            return state;\r\n        }\r\n    };\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// Reducers\r\n\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { getProductDetailsReducer, getProductsReducer } from './reducers/productReducers';\r\n\r\n\r\nconst reducer = combineReducers({\r\n    cart: cartReducer,\r\n    getProducts: getProductsReducer,\r\n    getProductDetails: getProductDetailsReducer\r\n})\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem(\"cart\") ? JSON.parse(localStorage.getItem(\"cart\")) : []\r\n\r\nconst INITIAL_STATE = {\r\n    cart : {\r\n        cartItems: cartFromLocalStorage\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    INITIAL_STATE,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import * as actionTypes from '../constants/productConstants';\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.GET_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: [],\r\n            }\r\n        case actionTypes.GET_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n        case actionTypes.GET_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {}}, action) => {\r\n    switch (action.type)  {\r\n        case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload,\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n            return {\r\n                product: {},\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}